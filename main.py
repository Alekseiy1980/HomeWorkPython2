from random import randint
# '''
# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа,
#  которые встречаются в обоих наборах.Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
#  Затем пользователь вводит сами элементы множеств.
# '''
#
# size_sp1 = int(input("Введите размер первого списка "))
# sp = [size_sp1]
# for i in range(size_sp1):
#     sp.append(randint(1, 10))
# size_sp2 = int(input("Введите размер второго списка "))
# sp2 = [size_sp2]
# for i in range(size_sp2):
#     sp2.append(randint(1, 10))
# print (sp)
# print(sp2)
# sp3 = []
# for i in sp:
#     for j in sp2:
#         if i not in sp3:
#             if i == j:
#                 sp3.append(i)
#
# print(sorted(sp3))
#


'''
Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
круглой грядке, причем кусты высажены только по окружности. Таким образом, у
каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
выросло различное число ягод – на i-ом кусте выросло ai
 ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники.
Эта система состоит из управляющего модуля и нескольких собирающих модулей.
Собирающий модуль за один заход, находясь непосредственно перед некоторым
кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может
собрать за один заход собирающий модуль, находясь перед некоторым кустом
заданной во входном файле грядки.

'''
#
# bushes = int(input("Введите колличество кустов "))
# garden = [randint(1, 10) for i in range(bushes)]
#
# print(garden)
# max_sum = 0
# # Проходим по всем кустам и считаем максимальное кол-во ягод
# for i in range(bushes):
#     curr_sum = garden[i] + garden[(i + 1) % bushes] + garden[(i - 1 + bushes) % bushes]
#     max_sum = max(max_sum, curr_sum)    # находим максимаальное  кол-во ягод
#
# print(max_sum)

'''
задача 1 необязательная. Напишите программу, которая получает целое число и возвращает его двоичное, восьмеричное строковое представление.
Функции bin и oct используйте для проверки своего результата.
*Дополнительно
Попробуйте избежать дублирования кода в преобразованиях к разным системам счисления
Избегайте магических чисел
Добавьте аннотацию типов где это возможно
Используйте функции
'''
def binary(num: int) -> str:
    tmp_num: int = 0
    binary: str = ''
    while num > 0:
        tmp_num = num % 2
        binary += str(tmp_num)
        num = num // 2
    sp = binary[::-1]
    return sp

def octal(num: int) -> str:
    tmp_num: int = 0
    oct: str = ''
    while num > 0:
        tmp_num = num % 8
        oct = str(tmp_num) + oct
        num = num // 8
    return oct


num = int(input("Введите целое число - "))
sp = binary(num)
print (f"{num } В двоичной системе {sp}")
print(f" проверка {bin(num)}")
oc = octal(num)
print(f"{num} в восьмеричной системе {oc}")
print(f" проверка {oct(num)}")